/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package integradora;

import Beans.Precio;
import Beans.Producto;
import Daos.ProductoDao;
import static integradora.VentanaAdministrador.tabla_productos;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import utilerias.Mayusculas;

/**
 *
 * @author usuario100
 */
public class VentanaTablaProductos extends javax.swing.JFrame {

    Object[] producto_precios = null;

    public VentanaTablaProductos(Object[] producto_precios) {
        this.producto_precios = producto_precios;

        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        // this.setUndecorated(true); 
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);

        //EDITAR LOS DATOS DE UN  PRODUCTO
        if (this.producto_precios != null) {
        }


    }
    DefaultTableModel modelProductos = new DefaultTableModel(new String[]{"No", "Producto", "Existencias"}, 0);

    public VentanaTablaProductos() {
        this.producto_precios = producto_precios;

        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        // this.setUndecorated(true); 
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        productoTxt.setDocument(new Mayusculas());
        consultarProductosRegistrados(modelProductos);

        //AJUSTAR EL TAMAÃ‘O DE LAS COLUMNAS DE LA TABLA
        tabla_venta.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabla_venta.getColumnModel().getColumn(1).setPreferredWidth(300);
        tabla_venta.getColumnModel().getColumn(2).setPreferredWidth(80);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        registrarPreciosPeso = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        productoTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabla_venta = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setForeground(new java.awt.Color(102, 204, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de productos"));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        registrarPreciosPeso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/registrar.png"))); // NOI18N
        registrarPreciosPeso.setText("Agregar a la venta");
        registrarPreciosPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarPreciosPesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registrarPreciosPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(registrarPreciosPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        productoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productoTxtActionPerformed(evt);
            }
        });
        productoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productoTxtKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Nombre del producto");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(productoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        tabla_venta.setModel(modelProductos);
        tabla_venta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_ventaMouseClicked(evt);
            }
        });
        tabla_venta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabla_ventaKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(tabla_venta);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productoTxtActionPerformed

    private void registrarPreciosPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarPreciosPesoActionPerformed
        //SEMILLAS
        try {
            ProductoDao productoDao = new ProductoDao();
            boolean validInsert = false;

//            if (descripcionEditTxt.getText().equals("") || existenciasTxt.getText().equals("")) {
//                JOptionPane.showMessageDialog(this, "El nombre del producto y las existencias son obligatorios");
//                validInsert = true;
//            }

            //EDITAR DATOS DE PRODUCTO
            if (this.producto_precios != null) {

                Producto producto = (Producto) producto_precios[0];
                Precio precio = (Precio) producto_precios[1];



                this.producto_precios[0] = producto;
                this.producto_precios[1] = precio;

                if (productoDao.updateProducto(this.producto_precios)) {
                    JOptionPane.showMessageDialog(this, "El producto se acualizÃ³ correctamente");

                    //SE OBTIENE EL MODELO YA CREADO EN LA VISTA ADMINISTRADOR 
                    DefaultTableModel model = (DefaultTableModel) VentanaAdministrador.tabla_productos.getModel();

                    //SE ENVIA ESTE MISMO MODELO COMO PARAMETRO EN EL CONSTRUCTOR, PARA QUE SEA ACTUALIZADO
                    VentanaAdministrador va = new VentanaAdministrador(model);
                    this.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "No fue posible actualizar el producto");
                }

            } else {
                //REGISTRA NUEVO PROCUTO 

                //VALIDAR QUE EL PRODUCTO NO SE ENCUENTRE REGISTRADO

                boolean existe = false;
                int rowCount = 0;
                //RECORRE LAS FILAS DEL MODELO DE DATOS (PRODUCTOS) Y VERIFICA EN LA COLUMNA  1 = DescripciÃ³n, SI EL PRODUCTO YA SE ENCUENTRA REGISTRADO

                DefaultTableModel existProductModel = (DefaultTableModel) VentanaAdministrador.tabla_productos.getModel();
                while ((existProductModel.getDataVector().size()) > rowCount) {
                    if (productoTxt.getText().replaceAll("\\s", "").trim().equals(existProductModel.getValueAt(rowCount, 1).toString().replaceAll("\\s", "").trim())) {
                        existe = true;
                    }
                    rowCount++;
                }

                if (existe) {
                    JOptionPane.showMessageDialog(this, "Este producto ya se encuentra registrado");
                    validInsert = true;
                }

                //  SI "validInsert" ES DIFERENTE DE TRUE, SE PODRA REALIZAR EL REGISTRO

                if (!validInsert) {

                    Producto producto = new Producto();
                    Precio precioProducto = new Precio();

                    //DATOS DEL PRODUCTO
                    producto.setNombreProducto(productoTxt.getText().trim());
                    // producto.setCantidad(Float.parseFloat(existenciasTxt.getText().trim()));
                    producto.setMedida(1);

                    //OBTENER EL ULTIMO PRODUCTO REGISTRADO
                    Producto nuevoProducto = productoDao.insertProducto(producto);

                    if (nuevoProducto != null) {
                        //PRECIOS DE PRODUCTO;

                        //SE ENVIA EL PRODUCTO Y EL TIPO DE MEDIDA   (PIEZA = 1, PESO = 2)
                        if (!productoDao.insertPreciosProducto(precioProducto, 1)) {
                            System.out.println("Los precios no fueron registrados " + nuevoProducto.getNombreProducto());
                        }

                        JOptionPane.showMessageDialog(this, "El producto ( " + nuevoProducto.getNombreProducto() + " ) fue registrado correctamente");

                        //SE OBTIENE EL MODELO YA CREADO EN LA VISTA ADMINISTRADOR 
                        DefaultTableModel model = (DefaultTableModel) VentanaAdministrador.tabla_productos.getModel();

                        //SE ENVIA ESTE MISMO MODELO COMO PARAMETRO EN EL CONSTRUCTOR, PARA QUE SEA ACTUALIZADO
                        VentanaAdministrador va = new VentanaAdministrador(model);
                        this.setVisible(false);

                    } else {
                        JOptionPane.showMessageDialog(this, "No fue posible registrar el producto");
                    }
                }
            }
        } catch (Exception e) {
            System.out.println("ERROR AL INTENTAR REGISTRAR UN NUEVO PRODUCTO: " + e.getMessage());
        }
    }//GEN-LAST:event_registrarPreciosPesoActionPerformed

    private void tabla_ventaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_ventaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_ventaMouseClicked

    private void tabla_ventaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_ventaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {


            int[] seleccionados = tabla_venta.getSelectedRows();
            int fila = Integer.parseInt(tabla_venta.getValueAt(seleccionados[0], 0).toString());

            //SELECCIONAR UN PRODUCTO A LA VEZ
            if (seleccionados.length <= 0) {
                JOptionPane.showMessageDialog(this, "Seleccionar al menos un producto");
            } else {
                if (seleccionados.length > 1) {
                    JOptionPane.showMessageDialog(this, "Seleccionar un producto a la vez");
                } else {

                    //SE OBTIENE EL MODELO YA CREADO EN LA VISTA ADMINISTRADOR 
                    DefaultTableModel model = (DefaultTableModel) VentanaAdministrador.tabla_venta.getModel();

                    //SE ENVIA ESTE MISMO MODELO COMO PARAMETRO EN EL CONSTRUCTOR, PARA QUE SEA ACTUALIZADO
                    VentanaAdministrador va = new VentanaAdministrador(model);
                }
            }
        }
    }//GEN-LAST:event_tabla_ventaKeyPressed

    private void productoTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productoTxtKeyReleased
        filter(productoTxt.getText().toUpperCase());
    }//GEN-LAST:event_productoTxtKeyReleased
    Daos.ProductoDao productoDao = new ProductoDao();

    //  TABLA DE PRODUCTOS REGISTRADOS
    public void consultarProductosRegistrados(DefaultTableModel existProductModel) {

        //LIMPIAR LA TABLA, REMOVIENDO SUS FILAS
        while (existProductModel.getRowCount() > 0) {
            existProductModel.removeRow(0);
        }

        //CONSULTAR LOS PRODUCTOS REGISTRADOS Y AGREGARLOS AL MODELO
        List<Object[]> productos = productoDao.readAllProducts();

        for (int i = 0; i < productos.size(); i++) {
            Object[] producto_precios = (Object[]) productos.get(i);
            String[] producto = {(i + 1) + "", ((Producto) producto_precios[0]).getNombreProducto(), ((Producto) producto_precios[0]).getCantidad() + ""};
            existProductModel.addRow(producto);
        }
    }

    private void filter(String producto) {
        TableRowSorter<DefaultTableModel> tablerow = new TableRowSorter<DefaultTableModel>(modelProductos);
        tabla_venta.setRowSorter(tablerow);
        tablerow.setRowFilter(RowFilter.regexFilter(producto));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaTablaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaTablaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaTablaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaTablaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaTablaProductos(null).setVisible(true);
                //new VentanaProductoPeso().setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField productoTxt;
    private javax.swing.JButton registrarPreciosPeso;
    public static javax.swing.JTable tabla_venta;
    // End of variables declaration//GEN-END:variables
}
